
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#     The "createProcessingInstruction(target,data)" method 
#    creates a new ProcessingInstruction node with the
#    specified name and data string.
#    
#    Retrieve the entire DOM document and invoke its 
#    "createProcessingInstruction(target,data)" method.  
#    It should create a new PI node with the specified target 
#    and data.  The target, data and type are retrieved and
#    output.
# @author NIST
# @author Mary Brady
# @author Curt Arnold
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#]
# see[http://lists.w3.org/Archives/Public/www-dom-ts/2001Apr/0020.html]
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-135944439]
# see[http://www.w3.org/Bugs/Public/show_bug.cgi?id=249]
##
DOMTestCase('documentcreateprocessinginstruction') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staff", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_documentcreateprocessinginstruction
    doc = nil
    newPINode = nil
    piValue = nil
    piName = nil
    piType = nil
    doc = load_document("staff", true)
      newPINode = doc.createProcessingInstruction("TESTPI", "This is a new PI node")
      assert_not_nil(newPINode, "createdPINotNull")
      piName = newPINode.nodeName()
      assert_equal("TESTPI", piName, "name")
            piValue = newPINode.nodeValue()
      assert_equal("This is a new PI node", piValue, "value")
            piType = newPINode.nodeType()
      assert_equal(7, piType, "type")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/documentcreateprocessinginstruction"
  end
end

