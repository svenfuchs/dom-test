
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001-2003 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#     The string returned by the "getNodeName()" method for a 
#     Comment Node is "#comment".
#     
#     Retrieve the Comment node in the XML file 
#     and check the string returned by the "getNodeName()" 
#     method.   It should be equal to "#comment".
# @author Curt Arnold
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-F68D095]
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-1728279322]
# see[http://www.w3.org/Bugs/Public/show_bug.cgi?id=248]
##
DOMTestCase('hc_nodecommentnodename') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "hc_staff", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_hc_nodecommentnodename
    doc = nil
    elementList = nil
    commentNode = nil
    nodeType = nil
    commentName = nil
    commentNodeName = nil
    doc = load_document("hc_staff", false)
      elementList = doc.childNodes()
      indexid36117345 = 0
    while (indexid36117345 < elementList.length)
      commentNode = elementList.item(indexid36117345)
    nodeType = commentNode.nodeType()
      
      if (equals(8, nodeType))
        commentNodeName = commentNode.nodeName()
      assert_equal("#comment", commentNodeName, "existingNodeName")
            
         end
       indexid36117345 += 1
            end
      commentNode = doc.createComment("This is a comment")
      commentNodeName = commentNode.nodeName()
      assert_equal("#comment", commentNodeName, "createdNodeName")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/hc_nodecommentnodename"
  end
end

