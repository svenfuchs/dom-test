
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#     If the sum of the "offset" and "count" exceeds the
#    "length" then the "substringData(offset,count)" method
#    returns all the characters to the end of the data. 
#    
#    Retrieve the character data from the second child 
#    of the first employee and access part of the data 
#    by using the substringData(offset,count) method
#    with offset=9 and count=10.  The method should return 
#    the substring "Martin" since offset+count > length
#    (19 > 15).
# @author NIST
# @author Mary Brady
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-6531BCCF]
##
DOMTestCase('characterdatasubstringexceedsvalue') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staff", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_characterdatasubstringexceedsvalue
    doc = nil
    elementList = nil
    nameNode = nil
    child = nil
    substring = nil
    doc = load_document("staff", false)
      elementList = doc.getElementsByTagName("name")
      nameNode = elementList.item(0)
      child = nameNode.firstChild()
      substring = child.substringData(9, 10)
      assert_equal("Martin", substring, "characterdataSubStringExceedsValueAssert")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/characterdatasubstringexceedsvalue"
  end
end

