
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#     The "setAttributeNode(newAttr)" method raises an 
#    "INUSE_ATTRIBUTE_ERR DOMException if the "newAttr" 
#    is already an attribute of another element.
#    
#    Retrieve the last child of the second employee and append
#    a newly created element.  The "createAttribute(name)"
#    and "setAttributeNode(newAttr)" methods are invoked
#    to create and add a new attribute to the newly created
#    Element.  The "setAttributeNode(newAttr)" method is
#    once again called to add the new attribute causing an
#    exception to be raised since the attribute is already
#    an attribute of another element.
# @author NIST
# @author Mary Brady
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#xpointer(id('ID-258A00AF')/constant[@name='INUSE_ATTRIBUTE_ERR'])]
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-887236154]
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#xpointer(id('ID-887236154')/raises/exception[@name='DOMException']/descr/p[substring-before(.,':')='INUSE_ATTRIBUTE_ERR'])]
##
DOMTestCase('elementinuseattributeerr') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staff", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_elementinuseattributeerr
    doc = nil
    newAttribute = nil
    addressElementList = nil
    testAddress = nil
    newElement = nil
    appendedChild = nil
    setAttr1 = nil
    setAttr2 = nil
    doc = load_document("staff", true)
      addressElementList = doc.getElementsByTagName("address")
      testAddress = addressElementList.item(1)
      newElement = doc.createElement("newElement")
      appendedChild = testAddress.appendChild(newElement)
      newAttribute = doc.createAttribute("newAttribute")
      setAttr1 = newElement.setAttributeNode(newAttribute)
      
    begin
      success = false;
      begin
        setAttr2 = testAddress.setAttributeNode(newAttribute)
      rescue Nokogiri::XML::DOMException => ex
        success = (ex.code == Nokogiri::XML::DOMException::INUSE_ATTRIBUTE_ERR)
      end 
      assert(success, "throw_INUSE_ATTRIBUTE_ERR")
    end

  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/elementinuseattributeerr"
  end
end

