
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001-2004 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#     The "getSpecified()" method for an Attr node should return true if the 
#   value of the attribute is changed. 
#   Retrieve the attribute named "class" from the last 
#   child of of the THIRD employee and change its 
#   value to "Yes"(which is the default DTD value).  This
#   should cause the "getSpecified()" method to be true.
#   This test uses the "setAttribute(name,value)" method
#   from the Element interface and the "getNamedItem(name)"
#   method from the NamedNodeMap interface.
# @author Curt Arnold
# see[http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#ID-862529273]
##
DOMTestCase('hc_attrspecifiedvaluechanged') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "hc_staff", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_hc_attrspecifiedvaluechanged
    doc = nil
    addressList = nil
    testNode = nil
    attributes = nil
    streetAttr = nil
    state = nil
    doc = load_document("hc_staff", true)
      addressList = doc.getElementsByTagName("acronym")
      testNode = addressList.item(2)
      testNode.setAttribute("class", "YÎ±")
      attributes = testNode.attributes()
      streetAttr = attributes.getNamedItem("class")
      state = streetAttr.specified()
      assertTrue("acronymClassSpecified", state)
      
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/hc_attrspecifiedvaluechanged"
  end
end

