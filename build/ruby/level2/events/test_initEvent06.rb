
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
# The Event.initEvent method is called for event returned by 
# DocumentEvent.createEvent("MutationEvents")
# and the state is checked to see if it reflects the parameters.  initEvent may be 
# called multiple times and the last time is definitive.
# @author Curt Arnold
# see[http://www.w3.org/TR/DOM-Level-2-Events/events#Events-Event-initEvent]
##
DOMTestCase('initEvent06') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
        if (factory.hasFeature("MutationEvents", "2.0") != true)
         raise 'org.w3c.domts.DOMTestIncompatibleException.incompatibleFeature("MutationEvents", "2.0")'
      end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "hc_staff", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_initEvent06
    doc = nil
    event = nil
    expectedEventType = "rotate";
    actualEventType = nil
    actualCanBubble = nil
    actualCancelable = nil
    doc = load_document("hc_staff", true)
      event = doc.createEvent("MutationEvents")
      assert_not_nil(event, "notnull")
      event.initEvent("rotate", true, true)
      actualEventType = event.type()
      assert_equal("rotate", actualEventType, "type")
            actualCancelable = event.cancelable()
      assert_equal(true, actualCancelable, "cancelable")
            actualCanBubble = event.bubbles()
      assert_equal(true, actualCanBubble, "canBubble")
            event.initEvent("shear", false, false)
      actualEventType = event.type()
      assert_equal("shear", actualEventType, "type2")
            actualCancelable = event.cancelable()
      assert_equal(false, actualCancelable, "cancelable2")
            actualCanBubble = event.bubbles()
      assert_equal(false, actualCanBubble, "canBubble2")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/initEvent06"
  end
end

