
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#     The insertRow() method inserts a new empty table row. 
#     If index is -1 or equal to the number of rows, the new row
#     is appended.
#     
#     Retrieve the second TABLE element and invoke the insertRow() method
#     with an index of negative one.   
#     The number of rows in the TBODY section before insertion with an index
#     of negative one is two.  After the new row is inserted the number 
#     of rows in the TBODY section is three.
# @author NIST
# @author Rick Rivello
# see[http://www.w3.org/TR/DOM-Level-2-HTML/html#ID-39872903]
##
DOMTestCase('HTMLTableElement39') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "table", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_HTMLTableElement39
    nodeList = nil
    tbodiesnodeList = nil
    testNode = nil
    bodyNode = nil
    newRow = nil
    rowsnodeList = nil
    vsection1 = nil
    vsection2 = nil
    vrows = nil
    doc = nil
    doc = load_document("table", true)
      nodeList = doc.getElementsByTagName("table")
      assertSize("Asize", 3, nodeList)
      testNode = nodeList.item(1)
      tbodiesnodeList = testNode.tBodies()
      bodyNode = tbodiesnodeList.item(0)
      rowsnodeList = bodyNode.rows()
      vrows = rowsnodeList.length()
      assert_equal(2, vrows, "rowsLink1")
            newRow = testNode.insertRow(-1)
      tbodiesnodeList = testNode.tBodies()
      bodyNode = tbodiesnodeList.item(0)
      rowsnodeList = bodyNode.rows()
      vrows = rowsnodeList.length()
      assert_equal(3, vrows, "rowsLink2")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/HTMLTableElement39"
  end
end

