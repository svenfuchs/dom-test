
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#  The importNode method imports a node from another document to this document. 
#  The returned node has no parent; (parentNode is null). The source node is not 
#  altered or removed from the original document but a new copy of the source node
#  is created.
#  
#  Using the method importNode with deep=true, retreive the entity refs present in the 
#  second element node whose tagName is address and import these nodes into another document. 
#  Verify if the nodes have been imported correctly by checking the nodeNames of the 
#  imported nodes, since they are imported into a new document which doesnot have thes defined,
#  the imported nodes should not have any children.
#  Now import the entityRef nodes into the same document and verify if the nodes have been 
#  imported correctly by checking the nodeNames of the imported nodes, and by checking the 
#  value of the replacement text of the imported nodes.
# @author IBM
# @author Neil Delima
# see[http://www.w3.org/TR/DOM-Level-2-Core/core]
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#Core-Document-importNode]
##
DOMTestCase('documentimportnode21') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
=begin
      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware,
org.w3c.domts.DocumentBuilderSetting.notExpandEntityReferences
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings)
        setFactory(testFactory)
=end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_documentimportnode21
    doc = nil
    docTypeNull = nil;

    docImp = nil
    domImpl = nil
    addressList = nil
    addressChildList = nil
    element = nil
    entRef2 = nil
    entRefImp2 = nil
    entRef3 = nil
    entRefImp3 = nil
    nodeName2 = nil
    nodeName3 = nil
    nodeNameImp2 = nil
    nodeNameImp3 = nil
    nodes = nil
    nodeImp3 = nil
    nodeImp2 = nil
    nodeValueImp2 = nil
    nodeValueImp3 = nil
    doc = load_document("staffNS", true)
      domImpl = doc.getImplementation()
      docImp = domImpl.createDocument("http://www.w3.org/DOM/Test", "a:b", docTypeNull)
      addressList = doc.getElementsByTagName("address")
      element = addressList.item(1)
      addressChildList = element.childNodes()
      entRef2 = addressChildList.item(0)
      entRef3 = addressChildList.item(2)
      entRefImp2 = docImp.importNode(entRef2, true)
      entRefImp3 = docImp.importNode(entRef3, false)
      nodeName2 = entRef2.nodeName()
      nodeName3 = entRef3.nodeName()
      nodeNameImp2 = entRefImp2.nodeName()
      nodeNameImp3 = entRefImp3.nodeName()
      assert_equal(nodeName2, nodeNameImp2, "documentimportnode21_Ent2NodeName")
            assert_equal(nodeName3, nodeNameImp3, "documentimportnode21_Ent3NodeName")
            entRefImp2 = doc.importNode(entRef2, true)
      entRefImp3 = doc.importNode(entRef3, false)
      nodes = entRefImp2.childNodes()
      nodeImp2 = nodes.item(0)
      nodeValueImp2 = nodeImp2.nodeValue()
      nodes = entRefImp3.childNodes()
      nodeImp3 = nodes.item(0)
      nodeValueImp3 = nodeImp3.nodeValue()
      assert_equal("1900 Dallas Road", nodeValueImp2, "documentimportnode21_Ent2NodeValue")
            assert_equal("Texas", nodeValueImp3, "documentimportnode21_Ent3Nodevalue")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/documentimportnode21"
  end
end

