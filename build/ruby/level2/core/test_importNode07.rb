
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001-2003 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#     The "importNode(importedNode,deep)" method for a 
#    Document should import the given importedNode into that Document.
#    The importedNode is of type Element.
#    If this document defines default attributes for this element name (importedNode),
#    those default attributes are assigned.
#    
#    Create an element whose name is "emp:employee" in a different document.
#    Invoke method importNode(importedNode,deep) on this document which
#    defines default attribute for the element name "emp:employee".
#    Method should return an the imported element with an assigned default attribute.
# @author NIST
# @author Mary Brady
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#Core-Document-importNode]
# see[http://www.w3.org/Bugs/Public/show_bug.cgi?id=238]
##
DOMTestCase('importNode07') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
=begin
      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware,
org.w3c.domts.DocumentBuilderSetting.validating
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings)
        setFactory(testFactory)
=end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", true)
    preload(contentType, "staff", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_importNode07
    doc = nil
    aNewDoc = nil
    element = nil
    aNode = nil
    attributes = nil
    name = nil
    attr = nil
    lname = nil
    namespaceURI = "http://www.nist.gov";
    qualifiedName = "emp:employee";
    doc = load_document("staffNS", true)
      aNewDoc = load_document("staff", true)
      element = aNewDoc.createElementNS(namespaceURI, qualifiedName)
      aNode = doc.importNode(element, false)
      attributes = aNode.attributes()
      assertSize("throw_Size", 1, attributes)
      name = aNode.nodeName()
      assert_equal("emp:employee", name, "nodeName")
            attr = attributes.item(0)
      lname = attr.localName()
      assert_equal("defaultAttr", lname, "lname")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/importNode07"
  end
end

