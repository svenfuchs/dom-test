
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#     The method getNamedItemNS retrieves a node specified by local name and namespace URI. 
#   
#     Create a new Element node and add 2 new attribute nodes having the same local name but different
#     namespace names and namespace prefixes to it.  Using the getNamedItemNS retreive the second attribute node.  
#     Verify if the attr node has been retreived successfully by checking its nodeName atttribute.
# @author IBM
# @author Neil Delima
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#ID-getNamedItemNS]
##
DOMTestCase('namednodemapgetnameditemns03') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
=begin
      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings)
        setFactory(testFactory)
=end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_namednodemapgetnameditemns03
    doc = nil
    attributes = nil
    element = nil
    attribute = nil
    newAttr1 = nil
    newAttr2 = nil
    newAttribute = nil
    attrName = nil
    doc = load_document("staffNS", false)
      element = doc.createElementNS("http://www.w3.org/DOM/Test", "root")
      newAttr1 = doc.createAttributeNS("http://www.w3.org/DOM/L1", "L1:att")
      newAttribute = element.setAttributeNodeNS(newAttr1)
      newAttr2 = doc.createAttributeNS("http://www.w3.org/DOM/L2", "L2:att")
      newAttribute = element.setAttributeNodeNS(newAttr2)
      attributes = element.attributes()
      attribute = attributes.getNamedItemNS("http://www.w3.org/DOM/L2", "att")
      attrName = attribute.nodeName()
      assert_equal("L2:att", attrName, "namednodemapgetnameditemns03")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/namednodemapgetnameditemns03"
  end
end

