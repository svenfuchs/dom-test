
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#     The "createDocument(namespaceURI,qualifiedName,doctype)" method for a 
#    DOMImplementation should return a new xml Document object of the 
#    specified type with its document element given that all parameters are
#    valid and correctly formed.
#    
#    Invoke method createDocument(namespaceURI,qualifiedName,doctype) on
#    this domimplementation. namespaceURI is "http://www.ecommerce.org/schema"
#    qualifiedName is "y:x" and doctype is null.
#    Method should return a new xml Document as specified by the listed parameters.
# @author NIST
# @author Mary Brady
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#Level-2-Core-DOM-createDocument]
##
DOMTestCase('createDocument07') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_createDocument07
    namespaceURI = "http://www.ecommerce.org/schema";
    qualifiedName = "y:x";
    doc = nil
    docType = nil;

    domImpl = nil
    aNewDoc = nil
    nodeName = nil
    nodeValue = nil
    doc = load_document("staffNS", false)
      domImpl = doc.getImplementation()
      aNewDoc = domImpl.createDocument(namespaceURI, qualifiedName, docType)
      nodeName = aNewDoc.nodeName()
      nodeValue = aNewDoc.nodeValue()
      assert_equal("#document", nodeName, "nodeName")
            assert_nil(nodeValue, "nodeValue")
      
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/createDocument07"
  end
end

