
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001-2004 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#     The "setAttributeNS(namespaceURI,qualifiedName,value)" method adds a new attribute.
#    If an attribute with the same local name and namespace URI is already present
#    on the element, its prefix is changed to be the prefix part of the "qualifiedName",
#    and its vale is changed to be the "value" paramter.
#    null value if no previously existing Attr node with the
#    same name was replaced.
#    
#    Add a new attribute to the "emp:address" element.
#    Check to see if the new attribute has been successfully added to the document
#    by getting the attributes value, namespace URI, local Name and prefix.
# @author NIST
# @author Mary Brady
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#ID-ElSetAttrNS]
##
DOMTestCase('setAttributeNS09') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", true)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_setAttributeNS09
    localName = "newAttr";
    namespaceURI = "http://www.newattr.com";
    qualifiedName = "emp:newAttr";
    doc = nil
    elementList = nil
    testAddr = nil
    addrAttr = nil
    resultAttr = nil
    resultNamespaceURI = nil
    resultLocalName = nil
    resultPrefix = nil
    doc = load_document("staffNS", true)
      elementList = doc.getElementsByTagName("emp:address")
      testAddr = elementList.item(0)
      assert_not_nil(testAddr, "empAddrNotNull")
      testAddr.setAttributeNS(namespaceURI, qualifiedName, "newValue")
      addrAttr = testAddr.getAttributeNodeNS(namespaceURI, localName)
      resultAttr = testAddr.getAttributeNS(namespaceURI, localName)
      assert_equal("newValue", resultAttr, "attrValue")
            resultNamespaceURI = addrAttr.namespaceURI()
      assert_equal("http://www.newattr.com", resultNamespaceURI, "nsuri")
            resultLocalName = addrAttr.localName()
      assert_equal("newAttr", resultLocalName, "lname")
            resultPrefix = addrAttr.prefix()
      assert_equal("emp", resultPrefix, "prefix")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/setAttributeNS09"
  end
end

