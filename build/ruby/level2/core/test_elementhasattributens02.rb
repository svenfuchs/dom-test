
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin


Copyright (c) 2001-2004 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


=end
#

require 'helper'

###
#       The method hasAttributeNS returns true when an attribute with a given local 
#       name and namespace URI is specified on this element or has a default value, 
#       false otherwise. 
#       Create a new element and attribute node that belong to the same namespace.  
#       Add the attribute node to the element node.  Check if the newly created element 
#       node has an attribute by invoking the hasAttributeNS method with appropriate 
#       values for the namespaceURI and localName parameters.
 #     
# @author IBM
# @author Neil Delima
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#ID-ElHasAttrNS]
##
DOMTestCase('elementhasattributens02') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
=begin
      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings)
        setFactory(testFactory)
=end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staff", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_elementhasattributens02
    doc = nil
    element = nil
    state = nil
    attribute = nil
    newAttribute = nil
    doc = load_document("staff", false)
      element = doc.createElementNS("http://www.w3.org/DOM", "address")
      attribute = doc.createAttributeNS("http://www.w3.org/DOM", "domestic")
      newAttribute = element.setAttributeNode(attribute)
      state = element.hasAttributeNS("http://www.w3.org/DOM", "domestic")
      assertTrue("hasDomesticAttr", state)
      
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/elementhasattributens02"
  end
end

