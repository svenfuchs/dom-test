
###
# This Ruby source file was generated by test-to-ruby.xsl
# and is a derived work from the source document.
# The source document contained the following notice:
=begin

Copyright (c) 2001 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.

=end
#

require 'helper'

###
#       The method getAttributeNodeNS retrieves an Attr node by local name and namespace URI.
#       Create a new element node and add 2 new attribute nodes to it that have the same 
#       local name but different namespaceURIs and prefixes.  
#       Retrieve an attribute using namespace and localname and check its value, name and 
#       namespaceURI.
 #     
# @author IBM
# @author Neil Delima
# see[http://www.w3.org/TR/DOM-Level-2-Core/core#ID-ElGetAtNodeNS]
##
DOMTestCase('elementgetattributenodens01') do

  ###
  # Constructor.
  # @param factory document factory, may not be null
  # @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
  ##
  def setup
=begin
      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings)
        setFactory(testFactory)
=end

    ##
    ##   check if loaded documents are supported for content type
    ##
    contentType = getContentType()
    preload(contentType, "staffNS", false)
  end

  ###
  # Runs the test case.
  # @throws Throwable Any uncaught exception causes test to fail
  #
  def test_elementgetattributenodens01
    doc = nil
    element = nil
    attribute1 = nil
    attribute2 = nil
    newAttribute1 = nil
    newAttribute2 = nil
    attribute = nil
    attrValue = nil
    attrName = nil
    attNodeName = nil
    attrLocalName = nil
    attrNS = nil
    doc = load_document("staffNS", false)
      element = doc.createElementNS("namespaceURI", "root")
      attribute1 = doc.createAttributeNS("http://www.w3.org/DOM/Level2", "l2:att")
      newAttribute1 = element.setAttributeNodeNS(attribute1)
      attribute2 = doc.createAttributeNS("http://www.w3.org/DOM/Level1", "att")
      newAttribute2 = element.setAttributeNodeNS(attribute2)
      attribute = element.getAttributeNodeNS("http://www.w3.org/DOM/Level2", "att")
      attrValue = attribute.nodeValue()
      attrName = attribute.name()
      attNodeName = attribute.nodeName()
      attrLocalName = attribute.localName()
      attrNS = attribute.namespaceURI()
      assert_equal("", attrValue, "elementgetattributenodens01_attrValue")
            assert_equal("l2:att", attrName, "elementgetattributenodens01_attrName")
            assert_equal("l2:att", attNodeName, "elementgetattributenodens01_attrNodeName")
            assert_equal("att", attrLocalName, "elementgetattributenodens01_attrLocalName")
            assert_equal("http://www.w3.org/DOM/Level2", attrNS, "elementgetattributenodens01_attrNs")
            
  end

  ###
  # Gets URI that identifies the test.
  # @return uri identifier of test
  #
  def targetURI
    "http://www.w3.org/2001/DOM-Test-Suite/tests/Level-1/elementgetattributenodens01"
  end
end

